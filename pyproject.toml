[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trading-chart"
version = "0.2.0"
description = "Asset trading data infrastructure monorepo"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "TradingChart Team"},
]

# Core dependencies (needed by asset_core)
dependencies = [
    "pydantic>=2.0",
    "pydantic-settings>=2.0",
    "loguru>=0.7.0",
    "prometheus-client>=0.19.0",
    "websockets>=12.0",
    "aiohttp>=3.9.0",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
]

[project.optional-dependencies]
# Crypto Single application dependencies
crypto-single = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
    "aiosqlite>=0.19.0",
    "redis>=5.0.0",
    "dependency-injector>=4.41.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
]

# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "httpx>=0.25.0",
    "faker>=19.0.0",
    "factory-boy>=3.3.0",
    "hypothesis>=6.80.0",
]

[project.scripts]
crypto-single = "crypto_single.main:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["asset_core*", "crypto_single*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["src"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
asyncio_mode = "auto"
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running",
    "config: Configuration related tests",
    "models: Data model tests",
    "network: Network connectivity tests",
    "exceptions: Exception handling tests",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
mypy_path = ["src"]
packages = ["asset_core", "crypto_single"]
files = ["tests/"]
exclude = ["examples/", "data/"]
explicit_package_bases = true
namespace_packages = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "asset_core.*"
follow_imports = "normal"

[[tool.mypy.overrides]]
module = "memory_profiler"
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise ... from ... in except blocks
    "B010",  # Do not call setattr with constant attribute - needed for mypy method assignment fix
    "W293",  # blank line contains whitespace
    "W291",  # trailing whitespace
]

[tool.ruff.lint.isort]
known-first-party = ["asset_core", "crypto_single"]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[dependency-groups]
crypto-single = [
    "dependency-injector>=4.48.1",
]
dev = [
    "factory-boy>=3.3.3",
    "faker>=37.4.0",
    "httpx>=0.28.1",
    "hypothesis>=6.135.16",
    "memory-profiler>=0.61.0",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.1",
    "time-machine>=2.10.0",
    "types-psutil>=7.0.0.20250601",
]

[project.urls]
Homepage = "https://github.com/tommot20077/tradingview-chart"
Repository = "https://github.com/tommot20077/tradingview-chart"
Issues = "https://github.com/tommot20077/tradingview-chart/issues"
