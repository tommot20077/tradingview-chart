[project]
name = "tradingchart-monorepo"
version = "0.1.0"
description = "asset trading data infrastructure monorepo"
requires-python = ">=3.12"
dependencies = [
    "asset-core[dev]",
    "crypto-single",
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "src/asset_core/tests",
    "src/crypto_single/tests",
    "src/crypto_cluster/tests",
]
pythonpath = [
    "src/asset_core",
    "src/crypto_single",
    "src/crypto_cluster",
]
addopts = [
    "--strict-markers",
    "--verbose",
    "-ra",
]
markers = [
    "config: Configuration related tests",
    "models: Data model tests",
    "network: Network connectivity tests",
    "exceptions: Exception handling tests",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
files = ["src/"]
exclude = ["examples/", "docs/"]
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = "src.*.tests.*"
ignore_errors = true

[tool.ruff]
target-version = "py312"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise ... from ... in except blocks
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG"]
"*/tests/*" = ["ARG"]
"src/*/tests/*" = ["ARG"]
"src/asset_core/tests/*" = ["ARG"]

[tool.ruff.lint.isort]
known-first-party = ["asset_core", "crypto_single", "crypto_cluster"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
source = ["src/asset_core", "src/crypto_single", "src/crypto_cluster"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.uv.sources]
asset-core = { path = "src/asset_core", editable = true }
crypto-single = { path = "src/crypto_single", editable = true }

[project.urls]
Homepage = "https://github.com/tommot20077/tradingview-chart"
Repository = "https://github.com/tommot20077/tradingview-chart"
Issues = "https://github.com/tommot20077/tradingview-chart/issues"
